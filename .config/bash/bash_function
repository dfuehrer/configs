#!/bin/bash
# make a directory and cd into it
cdmd () { mkdir -p $1 && cd $1; }

# sort all printenv if no args but if args print out what works and then remove the uppercase and send all to upper and print that out (this should prevent overlap and make it so lowercase works for upper which is as case insensitive as i usually care about (if i want case insensitive i can just env | grep -i "$@"))
pe () { [ -z "$1" ] && printenv | sort || { printenv "$@"; lower="$( echo "$@" | tr -d '[:upper:]' | tr '[:lower:]' '[:upper:]' )" && [ -n "$lower" ] && printenv $lower; }; }

# sort env but still make it useable
env () { [ -z "$1" ] && command env | sort || command env "$@"; }

# stole this from which manpage
# This will print the readable ~/ and ./ when starting which from your prompt, while still printing the full path in scripts
which () {
    (alias; declare -f) | command which --tty-only --read-alias --read-functions --show-tilde --show-dot $@
}
# TODO do i need this?
export -f which

# make it so i can cd with lf
# TODO maybe try making this use a fifo file so i dont have to deal with using a real file
lfcd () {
    CD="$(mktemp -t lf-cd.XXXXXXXXXX)"
    cleanup() { rm -f "$CD"; }
    trap cleanup EXIT

    lf -last-dir-path="$CD" "$@"
    [ -f "$CD" ] && dir=$(< "$CD") && [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && pushd "$dir"
}
